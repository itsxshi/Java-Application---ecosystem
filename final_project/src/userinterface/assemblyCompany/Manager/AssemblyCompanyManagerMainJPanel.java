/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.deliveryman;

import business.ecosystem.EcoSystem;
import business.enterprise.DeliveryCompany;
import business.enterprise.Enterprise;
import business.enterprise.WarehouseCompany;
import business.network.Network;
import business.user.EmployeeUser;
import business.user.User;
import business.workqueue.AssemblyRequest;
import business.workqueue.BuyOrderRequest;
import business.workqueue.DeliveryRequest;
import business.workqueue.RentOrderRequest;
import business.workqueue.SellOrderRequest;
import business.workqueue.WarehouseRequest;
import business.workqueue.WorkRequest;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.LoginJFrame;
import util.DB4OUtil;

/**
 *
 * @author Shi
 */
public class DeliveryManWorkAreaJPanel extends javax.swing.JPanel {

    private EcoSystem system = EcoSystem.getInstance();
    private JPanel panel;
    private JFrame frame;
    private EmployeeUser user;

    private DeliveryCompany e;
    private Network n;

    /**
     * Creates new form DeliveryManWorkAreaJPanel
     */
    public DeliveryManWorkAreaJPanel(JPanel panel, JFrame frame, EmployeeUser user) {
        initComponents();
        this.panel = panel;
        this.frame = frame;
        this.user = user;

        getEnterprise();
        loadWorkRequest();
    }

    public void getEnterprise() {
        for (Network n : system.getNetworkList()) {
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseDir()) {
                for (User u : e.getUserDir().getUserDir()) {
                    if (u.getUsername().equals(user.getUsername())) {
                        this.e = (DeliveryCompany) e;
                        this.n = n;
                        return;
                    }
                }
            }
        }
    }

    public void loadWorkRequest() {
        DefaultTableModel dtm = (DefaultTableModel) taskTable.getModel();

        dtm.setRowCount(0);
        for (WorkRequest dr : n.getWorkqueue().getWorkRequestList()) {
            if (dr instanceof DeliveryRequest) {
                if ((((DeliveryRequest) dr).getDc() == null) || (((DeliveryRequest) dr).getDc().getName().equals(e.getName()))) {
                    Object[] rowData = new Object[5];
                    if (n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId()) instanceof BuyOrderRequest) {
                        WarehouseRequest wr = (WarehouseRequest) n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getWarehouseOrderId());
                        rowData[1] = wr.getWarehouse().getAddress();
                    } else if (n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId()) instanceof SellOrderRequest) {
                        WarehouseCompany wc = (WarehouseCompany) n.getWarehouseById(((DeliveryRequest) dr).getWarehouseOrderId());
                        rowData[1] = wc.getAddress();
                    }

                    rowData[0] = dr;

                    rowData[2] = ((DeliveryRequest) dr).getReceiverAddress();
                    rowData[3] = dr.getRequestDate();
                    rowData[4] = dr.getwStatus();
                    dtm.addRow(rowData);
                }
            }
        }
        taskTable.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        AccountDetailPanel = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        uploadButton = new javax.swing.JButton();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        userNameTextField = new javax.swing.JTextField();
        userNameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextArea();
        AddressLabel = new javax.swing.JLabel();
        zipCodeLabel = new javax.swing.JLabel();
        zipCodeTextField = new javax.swing.JTextField();
        phoneLabel = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        deliveryDescriptionTextArea = new javax.swing.JTextArea();
        TaskDashboardPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        taskTable = new javax.swing.JTable();
        taskDetailLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        pickUpAddress = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        shipperNameTextField = new javax.swing.JTextField();
        shipperPhoneTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        destinationTxt = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        reciverTextField = new javax.swing.JTextField();
        receiverPhoneTextField = new javax.swing.JTextField();
        detailBtn = new javax.swing.JButton();
        onthewayBtn = new javax.swing.JButton();
        confirmBtn = new javax.swing.JButton();
        deliveredBtn = new javax.swing.JButton();
        ManagePasswordPanel = new javax.swing.JPanel();
        oldPasswordLabel = new javax.swing.JLabel();
        oldPasswordTextField = new javax.swing.JTextField();
        newPasswordLabel = new javax.swing.JLabel();
        newPasswordTextField = new javax.swing.JTextField();
        confirmPasswardLabel = new javax.swing.JLabel();
        confirmPasswordTextField = new javax.swing.JTextField();
        savePwdButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();

        uploadButton.setText("Upload Photo");

        firstNameLabel.setText("First Name:");

        firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldActionPerformed(evt);
            }
        });

        lastNameLabel.setText("Last Name:");

        lastNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastNameTextFieldActionPerformed(evt);
            }
        });

        userNameLabel.setText("User Name:");

        addressTextArea.setColumns(20);
        addressTextArea.setRows(5);
        jScrollPane1.setViewportView(addressTextArea);

        AddressLabel.setText("Address:");

        zipCodeLabel.setText("Zip Code:");

        phoneLabel.setText("Phone:");

        phoneTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneTextFieldActionPerformed(evt);
            }
        });

        emailLabel.setText("Email:");

        saveButton.setText("Save");

        editButton.setText("Edit");

        cancelButton.setText("Cancel");

        jLabel6.setText("Description:");

        deliveryDescriptionTextArea.setColumns(20);
        deliveryDescriptionTextArea.setRows(5);
        jScrollPane5.setViewportView(deliveryDescriptionTextArea);

        javax.swing.GroupLayout AccountDetailPanelLayout = new javax.swing.GroupLayout(AccountDetailPanel);
        AccountDetailPanel.setLayout(AccountDetailPanelLayout);
        AccountDetailPanelLayout.setHorizontalGroup(
            AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountDetailPanelLayout.createSequentialGroup()
                .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AccountDetailPanelLayout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(editButton)
                        .addGap(63, 63, 63)
                        .addComponent(saveButton)
                        .addGap(64, 64, 64)
                        .addComponent(cancelButton))
                    .addGroup(AccountDetailPanelLayout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameLabel)
                            .addComponent(lastNameLabel)
                            .addComponent(userNameLabel)
                            .addComponent(AddressLabel)
                            .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailLabel)
                            .addComponent(jLabel6))
                        .addGap(47, 47, 47)
                        .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AccountDetailPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zipCodeLabel)
                                .addGap(18, 18, 18)
                                .addComponent(zipCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AccountDetailPanelLayout.createSequentialGroup()
                                .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(firstNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                                    .addComponent(lastNameTextField)
                                    .addComponent(userNameTextField)
                                    .addComponent(phoneTextField)
                                    .addComponent(emailTextField))
                                .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AccountDetailPanelLayout.createSequentialGroup()
                                        .addGap(44, 44, 44)
                                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AccountDetailPanelLayout.createSequentialGroup()
                                        .addGap(72, 72, 72)
                                        .addComponent(uploadButton))))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        AccountDetailPanelLayout.setVerticalGroup(
            AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AccountDetailPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AccountDetailPanelLayout.createSequentialGroup()
                        .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userNameLabel))
                        .addGap(18, 18, 18)
                        .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNameLabel)
                            .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameLabel)
                            .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneLabel)
                            .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailLabel)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(zipCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(zipCodeLabel)
                                .addComponent(AddressLabel))))
                    .addGroup(AccountDetailPanelLayout.createSequentialGroup()
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(uploadButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(AccountDetailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editButton)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addGap(28, 28, 28))
        );

        jTabbedPane1.addTab("Account Detail", AccountDetailPanel);

        taskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Pick-up", "Destination", "Date", "Status"
            }
        ));
        jScrollPane2.setViewportView(taskTable);

        taskDetailLabel.setText("Pick Up Address:");

        pickUpAddress.setColumns(20);
        pickUpAddress.setRows(5);
        jScrollPane3.setViewportView(pickUpAddress);

        jLabel1.setText("Shipper:");

        jLabel2.setText("Phone:");

        jLabel3.setText("Destination Address:");

        destinationTxt.setColumns(20);
        destinationTxt.setRows(5);
        jScrollPane4.setViewportView(destinationTxt);

        jLabel4.setText("Receiver:");

        jLabel5.setText("Phone:");

        reciverTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reciverTextFieldActionPerformed(evt);
            }
        });

        detailBtn.setText("Detail");
        detailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailBtnActionPerformed(evt);
            }
        });

        onthewayBtn.setText("On the way");
        onthewayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onthewayBtnActionPerformed(evt);
            }
        });

        confirmBtn.setText("Confirm");
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        deliveredBtn.setText("Delivered");
        deliveredBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveredBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TaskDashboardPanelLayout = new javax.swing.GroupLayout(TaskDashboardPanel);
        TaskDashboardPanel.setLayout(TaskDashboardPanelLayout);
        TaskDashboardPanelLayout.setHorizontalGroup(
            TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TaskDashboardPanelLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(TaskDashboardPanelLayout.createSequentialGroup()
                        .addComponent(detailBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(onthewayBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deliveredBtn))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addGroup(TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(taskDetailLabel)
                    .addGroup(TaskDashboardPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(shipperNameTextField))
                    .addGroup(TaskDashboardPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(shipperPhoneTextField))
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TaskDashboardPanelLayout.createSequentialGroup()
                        .addGroup(TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(receiverPhoneTextField)
                            .addComponent(reciverTextField))))
                .addGap(55, 55, 55))
        );
        TaskDashboardPanelLayout.setVerticalGroup(
            TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TaskDashboardPanelLayout.createSequentialGroup()
                .addGroup(TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TaskDashboardPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(taskDetailLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(shipperNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(shipperPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(reciverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(TaskDashboardPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(TaskDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(receiverPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(detailBtn)
                    .addComponent(onthewayBtn)
                    .addComponent(confirmBtn)
                    .addComponent(deliveredBtn))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Task Dashboard", TaskDashboardPanel);

        oldPasswordLabel.setText("Old Password:");

        newPasswordLabel.setText("New Password:");

        confirmPasswardLabel.setText("Confirm Password:");

        savePwdButton.setText("Save");

        resetButton.setText("Reset");

        javax.swing.GroupLayout ManagePasswordPanelLayout = new javax.swing.GroupLayout(ManagePasswordPanel);
        ManagePasswordPanel.setLayout(ManagePasswordPanelLayout);
        ManagePasswordPanelLayout.setHorizontalGroup(
            ManagePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManagePasswordPanelLayout.createSequentialGroup()
                .addGroup(ManagePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManagePasswordPanelLayout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addGroup(ManagePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ManagePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(newPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(oldPasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(confirmPasswardLabel))
                        .addGap(37, 37, 37)
                        .addGroup(ManagePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(oldPasswordTextField)
                            .addComponent(newPasswordTextField)
                            .addComponent(confirmPasswordTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)))
                    .addGroup(ManagePasswordPanelLayout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(savePwdButton)
                        .addGap(47, 47, 47)
                        .addComponent(resetButton)))
                .addContainerGap(307, Short.MAX_VALUE))
        );
        ManagePasswordPanelLayout.setVerticalGroup(
            ManagePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManagePasswordPanelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(ManagePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oldPasswordLabel)
                    .addComponent(oldPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(ManagePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordLabel)
                    .addComponent(newPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(ManagePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPasswardLabel)
                    .addComponent(confirmPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(ManagePasswordPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(savePwdButton)
                    .addComponent(resetButton))
                .addContainerGap(150, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Manage Password", ManagePasswordPanel);

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(logoutButton))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(logoutButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed

    private void lastNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameTextFieldActionPerformed

    private void phoneTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneTextFieldActionPerformed

    private void reciverTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reciverTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reciverTextFieldActionPerformed

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        DB4OUtil.getInstance().storeSystem(system);
        frame.dispose();
        LoginJFrame lFrame = new LoginJFrame();
        lFrame.setLocationRelativeTo(null);
        lFrame.setVisible(true);
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void detailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.taskTable.getSelectedRow();
        if (selectedRow >= 0) {
            DeliveryRequest dr = (DeliveryRequest) this.taskTable.getValueAt(selectedRow, 0);
            if (n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId()) instanceof BuyOrderRequest) {
                WarehouseRequest wr = (WarehouseRequest) n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getWarehouseOrderId());
                pickUpAddress.setText(wr.getWarehouse().getAddress());
            } else if (n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId()) instanceof SellOrderRequest) {
                WarehouseCompany wc = (WarehouseCompany) n.getWarehouseById(((DeliveryRequest) dr).getWarehouseOrderId());
                pickUpAddress.setText(wc.getAddress());
            }
//            pickUpAddress.setText(wr.getWarehouse().getAddress());
            shipperNameTextField.setText(dr.getDc() != null ? dr.getDc().getName() : "");
            shipperPhoneTextField.setText(dr.getDc() != null ? dr.getDc().getPhone() : "");
            destinationTxt.setText(dr.getReceiverAddress());
            reciverTextField.setText(dr.getReceiverName());
            receiverPhoneTextField.setText(dr.getReceiverPhone());
        } else {
            JOptionPane.showMessageDialog(null, "please select one request");
        }
    }//GEN-LAST:event_detailBtnActionPerformed

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.taskTable.getSelectedRow();
        if (selectedRow >= 0) {
            DeliveryRequest dr = (DeliveryRequest) this.taskTable.getValueAt(selectedRow, 0);
            if (dr.getwStatus().equals(WarehouseRequest.status.Processing)) {
                dr.setwStatus(WorkRequest.status.Confirmed);

                if (n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId()) instanceof BuyOrderRequest) {
                    WarehouseRequest wr = (WarehouseRequest) n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getWarehouseOrderId());
                    wr.setwStatus(WorkRequest.status.Completed);
                } else if (n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId()) instanceof SellOrderRequest) {
                    WarehouseCompany wc = (WarehouseCompany) n.getWarehouseById(((DeliveryRequest) dr).getWarehouseOrderId());
                } else if (n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId()) instanceof RentOrderRequest) {
                    WarehouseCompany wc = (WarehouseCompany) n.getWarehouseById(((DeliveryRequest) dr).getWarehouseOrderId());
                }
//                WarehouseRequest wr = (WarehouseRequest) n.getWorkqueue().getOrderById(dr.getWarehouseOrderId());

                dr.setDc(e);
                loadWorkRequest();
                DB4OUtil.getInstance().storeSystem(system);

            } else {
                JOptionPane.showMessageDialog(null, "invalid action");
            }
        } else {
            JOptionPane.showMessageDialog(null, "please select one request");
        }
    }//GEN-LAST:event_confirmBtnActionPerformed

    private void onthewayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onthewayBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.taskTable.getSelectedRow();
        if (selectedRow >= 0) {
            DeliveryRequest dr = (DeliveryRequest) this.taskTable.getValueAt(selectedRow, 0);
            if (dr.getwStatus().equals(WarehouseRequest.status.Confirmed)) {
                dr.setwStatus(WorkRequest.status.OnTheWay);
                loadWorkRequest();
                DB4OUtil.getInstance().storeSystem(system);
            } else {
                JOptionPane.showMessageDialog(null, "invalid action");
            }
        } else {
            JOptionPane.showMessageDialog(null, "please select one request");
        }
    }//GEN-LAST:event_onthewayBtnActionPerformed

    private void deliveredBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveredBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = this.taskTable.getSelectedRow();
        if (selectedRow >= 0) {
            DeliveryRequest dr = (DeliveryRequest) this.taskTable.getValueAt(selectedRow, 0);
            if (dr.getwStatus().equals(WarehouseRequest.status.OnTheWay)) {
                dr.setwStatus(WorkRequest.status.Completed);

                if (n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId()) instanceof BuyOrderRequest) {
                    n.getWorkqueue().createAssemblyRequest(dr.getCustomerOrderId(), null, dr.getReceiverName(), dr.getReceiverAddress(), dr.getReceiverRequirements(), dr.getReceiverPhone(), user, dr.getOrderedFurnitures());
                } else if (n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId()) instanceof SellOrderRequest) {
//                    WarehouseCompany wc = (WarehouseCompany) n.getWarehouseById(((DeliveryRequest) dr).getWarehouseOrderId());
                    WarehouseRequest wr = this.n.getWorkqueue().createWarehouseRequest(dr.getCustomerOrderId(), dr.getReceiverName(), dr.getReceiverAddress(), dr.getReceiverRequirements(), dr.getReceiverPhone(), user, dr.getOrderedFurnitures());
                } else if (n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId()) instanceof RentOrderRequest) {
                    RentOrderRequest rr = (RentOrderRequest) n.getWorkqueue().getOrderById(((DeliveryRequest) dr).getCustomerOrderId());
                    if (!rr.isBack()) {
                        WarehouseRequest wr = this.n.getWorkqueue().createWarehouseRequest(dr.getCustomerOrderId(), dr.getReceiverName(), dr.getReceiverAddress(), dr.getReceiverRequirements(), dr.getReceiverPhone(), user, dr.getOrderedFurnitures());
                    } else {
                        AssemblyRequest ar = this.n.getWorkqueue().createAssemblyRequest(dr.getCustomerOrderId(), null, dr.getReceiverName(), dr.getReceiverAddress(), dr.getReceiverRequirements(), dr.getReceiverPhone(), user, dr.getOrderedFurnitures());
                    }
                }
//                n.getWorkqueue().createAssemblyRequest(dr.getCustomerOrderId(), null, dr.getReceiverName(), dr.getReceiverAddress(), dr.getReceiverRequirements(), dr.getReceiverPhone(), user, dr.getOrderedFurnitures());
                loadWorkRequest();
                DB4OUtil.getInstance().storeSystem(system);
            } else {
                JOptionPane.showMessageDialog(null, "invalid action");
            }
        } else {
            JOptionPane.showMessageDialog(null, "please select one request");
        }
    }//GEN-LAST:event_deliveredBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AccountDetailPanel;
    private javax.swing.JLabel AddressLabel;
    private javax.swing.JPanel ManagePasswordPanel;
    private javax.swing.JPanel TaskDashboardPanel;
    private javax.swing.JTextArea addressTextArea;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JLabel confirmPasswardLabel;
    private javax.swing.JTextField confirmPasswordTextField;
    private javax.swing.JButton deliveredBtn;
    private javax.swing.JTextArea deliveryDescriptionTextArea;
    private javax.swing.JTextArea destinationTxt;
    private javax.swing.JButton detailBtn;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JButton logoutButton;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JTextField newPasswordTextField;
    private javax.swing.JLabel oldPasswordLabel;
    private javax.swing.JTextField oldPasswordTextField;
    private javax.swing.JButton onthewayBtn;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JTextArea pickUpAddress;
    private javax.swing.JTextField receiverPhoneTextField;
    private javax.swing.JTextField reciverTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton savePwdButton;
    private javax.swing.JTextField shipperNameTextField;
    private javax.swing.JTextField shipperPhoneTextField;
    private javax.swing.JLabel taskDetailLabel;
    private javax.swing.JTable taskTable;
    private javax.swing.JButton uploadButton;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameTextField;
    private javax.swing.JLabel zipCodeLabel;
    private javax.swing.JTextField zipCodeTextField;
    // End of variables declaration//GEN-END:variables
}
